# ===========================================
# 基础镜像配置
# ===========================================
# 使用官方JDK 17精简版镜像作为基础
# - openjdk: 开源JDK实现
# - 17: Java版本
# - jdk-slim: 精简版，只包含必要组件，镜像体积更小
FROM openjdk:17-jdk-slim

# ===========================================
# 工作目录配置
# ===========================================
# 在容器内创建并设置工作目录为/app
# - 所有后续指令都将在此目录下执行
# - 应用相关文件都将存放在此目录
WORKDIR /app

# ===========================================
# 应用文件配置
# ===========================================
# 将构建好的Spring Boot JAR包复制到容器中
# - 源文件: backend-0.0.1-SNAPSHOT.jar (本地Maven构建产物)
# - 目标文件: app.jar (容器内的文件名)
COPY backend-0.0.1-SNAPSHOT.jar app.jar

# ===========================================
# 网络配置
# ===========================================
# 声明容器将使用的端口号
# - 8080: Spring Boot应用默认端口
# 注意：这只是声明，实际端口映射在docker-compose.yml中配置
EXPOSE 8080

# ===========================================
# 启动命令配置
# ===========================================
# 容器启动时执行的命令
# - java: 启动Java虚拟机
# - -jar: 执行JAR包
# - app.jar: 应用程序文件
# 这个命令会在容器启动时自动执行，启动Spring Boot应用
ENTRYPOINT ["java","-jar","app.jar"] 